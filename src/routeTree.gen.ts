/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as authImport } from './routes/__auth'
import { Route as IndexImport } from './routes/index'
import { Route as authMyProfileIndexImport } from './routes/__auth.my-profile/index'

// Create Virtual Routes

const RegisterLazyImport = createFileRoute('/register')()
const ForgotPasswordLazyImport = createFileRoute('/forgot-password')()
const authFeedIndexLazyImport = createFileRoute('/__auth/feed/')()

// Create/Update Routes

const RegisterLazyRoute = RegisterLazyImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const ForgotPasswordLazyRoute = ForgotPasswordLazyImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/forgot-password.lazy').then((d) => d.Route),
)

const ResetPasswordRoute = ResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const authRoute = authImport.update({
  id: '/__auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const authFeedIndexLazyRoute = authFeedIndexLazyImport
  .update({
    id: '/feed/',
    path: '/feed/',
    getParentRoute: () => authRoute,
  } as any)
  .lazy(() => import('./routes/__auth.feed/index.lazy').then((d) => d.Route))

const authMyProfileIndexRoute = authMyProfileIndexImport.update({
  id: '/my-profile/',
  path: '/my-profile/',
  getParentRoute: () => authRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/__auth': {
      id: '/__auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof authImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/__auth/my-profile/': {
      id: '/__auth/my-profile/'
      path: '/my-profile'
      fullPath: '/my-profile'
      preLoaderRoute: typeof authMyProfileIndexImport
      parentRoute: typeof authImport
    }
    '/__auth/feed/': {
      id: '/__auth/feed/'
      path: '/feed'
      fullPath: '/feed'
      preLoaderRoute: typeof authFeedIndexLazyImport
      parentRoute: typeof authImport
    }
  }
}

// Create and export the route tree

interface authRouteChildren {
  authMyProfileIndexRoute: typeof authMyProfileIndexRoute
  authFeedIndexLazyRoute: typeof authFeedIndexLazyRoute
}

const authRouteChildren: authRouteChildren = {
  authMyProfileIndexRoute: authMyProfileIndexRoute,
  authFeedIndexLazyRoute: authFeedIndexLazyRoute,
}

const authRouteWithChildren = authRoute._addFileChildren(authRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof authRouteWithChildren
  '/reset-password': typeof ResetPasswordRoute
  '/forgot-password': typeof ForgotPasswordLazyRoute
  '/register': typeof RegisterLazyRoute
  '/my-profile': typeof authMyProfileIndexRoute
  '/feed': typeof authFeedIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof authRouteWithChildren
  '/reset-password': typeof ResetPasswordRoute
  '/forgot-password': typeof ForgotPasswordLazyRoute
  '/register': typeof RegisterLazyRoute
  '/my-profile': typeof authMyProfileIndexRoute
  '/feed': typeof authFeedIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/__auth': typeof authRouteWithChildren
  '/reset-password': typeof ResetPasswordRoute
  '/forgot-password': typeof ForgotPasswordLazyRoute
  '/register': typeof RegisterLazyRoute
  '/__auth/my-profile/': typeof authMyProfileIndexRoute
  '/__auth/feed/': typeof authFeedIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/reset-password'
    | '/forgot-password'
    | '/register'
    | '/my-profile'
    | '/feed'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/reset-password'
    | '/forgot-password'
    | '/register'
    | '/my-profile'
    | '/feed'
  id:
    | '__root__'
    | '/'
    | '/__auth'
    | '/reset-password'
    | '/forgot-password'
    | '/register'
    | '/__auth/my-profile/'
    | '/__auth/feed/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authRoute: typeof authRouteWithChildren
  ResetPasswordRoute: typeof ResetPasswordRoute
  ForgotPasswordLazyRoute: typeof ForgotPasswordLazyRoute
  RegisterLazyRoute: typeof RegisterLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authRoute: authRouteWithChildren,
  ResetPasswordRoute: ResetPasswordRoute,
  ForgotPasswordLazyRoute: ForgotPasswordLazyRoute,
  RegisterLazyRoute: RegisterLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/__auth",
        "/reset-password",
        "/forgot-password",
        "/register"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/__auth": {
      "filePath": "__auth.tsx",
      "children": [
        "/__auth/my-profile/",
        "/__auth/feed/"
      ]
    },
    "/reset-password": {
      "filePath": "reset-password.tsx"
    },
    "/forgot-password": {
      "filePath": "forgot-password.lazy.tsx"
    },
    "/register": {
      "filePath": "register.lazy.tsx"
    },
    "/__auth/my-profile/": {
      "filePath": "__auth.my-profile/index.tsx",
      "parent": "/__auth"
    },
    "/__auth/feed/": {
      "filePath": "__auth.feed/index.lazy.tsx",
      "parent": "/__auth"
    }
  }
}
ROUTE_MANIFEST_END */
